name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'Backend/**'
      - 'config_server/**'
      - 'discovery/**'
      - 'gateway/**'
      - 'angular-front/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

#install
      - name: Install Angular dependencies
        working-directory: ./angular-front
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force ./node_modules
          npm install

      - name: Build Angular application
        working-directory: ./angular-front
        run: npm run build --prod

      - name: Upload Angular Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: angular-build
          path: angular-front/dist/**

      - name: Run tests for Angular application
        working-directory: ./angular-front
        run: npm test -- --coverage

      - name: Upload Angular test coverage
        uses: actions/upload-artifact@v3
        with:
          name: angular-test-coverage
          path: angular-front/coverage/**

      - name: Serve Angular application
        working-directory: ./angular-front
        run: |
          npm install -g http-server
          nohup http-server ./dist/angular-front -p 4200 &
          env:
            CI: true

#      - name: Build and test Config Service
#        working-directory: ./config_server
#        run: mvn clean install -DskipTests=false
#
#      - name: Build and test Discovery Service
#        working-directory: ./discovery
#        run: mvn clean install -DskipTests=false
#
#      - name: Build and test Gateway Service
#        working-directory: ./gateway
#        run: mvn clean install -DskipTests=false
#
#      - name: Build and test each Backend Service
#        run: |
#          for service in ./Backend/*/; do
#            if [ -f "$service/pom.xml" ]; then
#              if [[ "$service" == *"/users_service/" ]]; then
#                echo "Skipping $service"
#                continue
#              fi
#              echo "Building $service"
#              cd "$service"
#              mvn clean install -DskipTests=false
#              mvn test
#              cd - || exit
#            fi
#          done
      - name: Run Selenium Tests
        run: |
          echo "Running Selenium Tests for labo_service"
          cd ./Backend/labo_service
          mvn test -Dtest=SeleniumTest


